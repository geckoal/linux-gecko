// SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
/*
 * Device Tree Source for the RZ Solidrun HummingBoards
 *
 * Copyright (C) 2023 SolidRun Ltd.
 */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>

/ {
	cam_ext_2v8: 2p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_ext_2v8";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
	};

	cam_ext_1v8: 1p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_ext_1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	cam_ext_1v2: 1p2v {
		compatible = "regulator-fixed";
		regulator-name = "camera_ext_1v2";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
	};

	reg_sdhi0_vmmc: regulator-sdhi0 {
		compatible = "regulator-fixed";
		regulator-name = "VSD_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pinctrl RZG2L_GPIO(4, 1) GPIO_ACTIVE_LOW>;
		regulator-always-on;
	};

	usb0_vbus_otg: regulator-usb0-vbus-otg {
		compatible = "regulator-fixed";
		regulator-name = "USB0_VBUS_OTG";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&pinctrl RZG2L_GPIO(4, 0) GPIO_ACTIVE_HIGH>;
		gpio-open-drain;
		regulator-always-on;
		enable-active-high;
	};

	usb1_vbus: regulator-usb1-vbus {
		compatible = "regulator-fixed";
		regulator-name = "USB1_VBUS";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&pinctrl RZG2L_GPIO(42, 0) GPIO_ACTIVE_HIGH>;
		gpio-open-drain;
		regulator-always-on;
		enable-active-high;
	};
};

&canfd {
	pinctrl-0 = <&can1_pins>;
	pinctrl-names = "default";
	status = "disabled";
	/delete-node/ channel0;
	channel1 {
		renesas,channel = <1>;
		status = "okay";
	};
};

&cru {
	status = "disabled";
};

&csi2 {
	status = "disabled";
};

&dsi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	ports {
		port@1 {
			dsi0_out: endpoint {
				data-lanes = <1 2 3 4>;
				remote-endpoint = <&panel_in>;
			};
		};
	};

	panel-lvds@0 {
		compatible = "ilitek,ph720128t005";
		reg = <0>;
		reset-gpios = <&pinctrl RZG2L_GPIO(44, 1) GPIO_ACTIVE_LOW>;
		power-supply = <&reg_3p3v>;
		status = "okay";

		port {
			panel_in: endpoint {
				remote-endpoint = <&dsi0_out>;
			};
		};
	};
};

&du {
	status = "okay";
};

&ehci0 {
	spurious-oc;
	status = "okay";
};

&ehci1 {
	spurious-oc;
	status = "okay";
};

&eth0 {
	status = "okay";
};

&hsusb {
	status = "okay";
};

&i2c0 {
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-names = "default";
	clock-frequency = <400000>;
	status = "okay";
};

&ohci0 {
	spurious-oc;
	dr_mode = "otg";
	status = "okay";
};

&ohci1 {
	spurious-oc;
	status = "okay";
};

&pinctrl {
	gpio-lte_on {
		gpio-hog;
		gpios = <RZG2L_GPIO(17, 0) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "gpio_lte_on";
	};

	gpio-lte_reset {
		gpio-hog;
		gpios = <RZG2L_GPIO(42, 2) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "gpio_lte_reset";
	};
};

&scif1 {
	pinctrl-0 = <&scif1_pins>;
	pinctrl-names = "default";
	//uart-has-rtscts;
	status = "okay";
};

/* uSD */
&sdhi0 {
#if 0
	/* This is just a reference node if a customer is not using
	 * the sdhi0 node on the SOM for the eMMC. These properties
	 * are adjusted in our boot-loader depending on the sdio_select
	 * env variable.
	 */
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-1 = <&sdhi0_pins_uhs>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_sdhi0_vmmc>;
	vqmmc-supply = <&reg_sdhi0_vccq>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	bus-width = <4>;
	max-frequency = <50000000>; /* 50MiB */
	status = "disabled";
#endif
	cd-gpios = <&pinctrl RZG2L_GPIO(47, 0) GPIO_ACTIVE_LOW>;
};

&usb2_phy0 {
	status = "okay";
};

&usb2_phy1 {
	status = "okay";
};
